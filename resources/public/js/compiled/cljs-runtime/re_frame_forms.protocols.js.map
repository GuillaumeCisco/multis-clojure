{"version":3,"sources":["re_frame_forms/protocols.cljs"],"mappings":"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","names":["x__4487__auto__","m__4488__auto__","re-frame-forms.protocols/value","goog/typeOf","m__4485__auto__","cljs.core/missing-protocol","re-frame-forms.protocols/set-value!","re-frame-forms.protocols/Value","this","default","val","re-frame-forms.protocols/set-error!","re-frame-forms.protocols/PersistentError","error","re-frame-forms.protocols/clear-error!","re-frame-forms.protocols/original-value","re-frame-forms.protocols/reset-value!","re-frame-forms.protocols/ResetValue","re-frame-forms.protocols/str-value","re-frame-forms.protocols/set-str-value!","re-frame-forms.protocols/CoercedValue","retain-str?","re-frame-forms.protocols/errors","re-frame-forms.protocols/ErrorContainer","re-frame-forms.protocols/valid?","re-frame-forms.protocols/Validatable","re-frame-forms.protocols/touch!","re-frame-forms.protocols/touched?","re-frame-forms.protocols/Touchable","re-frame-forms.protocols/start-validation!","re-frame-forms.protocols/mark-ok!","re-frame-forms.protocols/mark-error!","re-frame-forms.protocols/DelayedValidation","re-frame-forms.protocols/validation-in-progress?","re-frame-forms.protocols/DelayValidationContainer"],"sourcesContent":["(ns re-frame-forms.protocols)\n\n\n(defprotocol Value\n  \"Protocol for value holder\"\n  (value\n    [this default]\n    \"Get reaction for current value\")\n  (set-value!\n    [this val]\n    \"Set current value\"))\n\n(defprotocol PersistentError\n  \"Persistent error is retained between validations. Has to be explicitly set and cleared.\"\n  (set-error!\n    [this error]\n    \"Set 1 error for the field. Error can be cleared by calling clear-error!\"))\n\n(defn clear-error!\n  \"Clear field error\"\n  [this]\n  (set-error! this nil))\n\n(defprotocol ResetValue\n  \"Protocol for accessing original value\"\n  (original-value\n    [this]\n    \"Get original value of the form/field\")\n  (reset-value!\n    [this]\n    \"Reset form/field to the original value, clear errors\"))\n\n(defprotocol CoercedValue\n  \"Field protocol converting to/from string\"\n  (str-value\n    [this]\n    \"Get reaction for current value converted to string\")\n  (set-str-value!\n    [this val retain-str?]\n    \"Set current value by converting val from string\"))\n\n(defprotocol ErrorContainer\n  \"Field/form errors\"\n  (errors\n    [this]\n    \"Get reaction for current field/form errors\"))\n\n(defprotocol Validatable\n  \"Field/form validation status\"\n  (valid?\n    [this]\n    \"Get reaction for current validation status of the form/field\"))\n\n(defprotocol Touchable\n  \"Protocol for forced validation.\"\n  (touch!\n    [this]\n    \"Touch the field/form\")\n  (touched?\n    [this]\n    \"Get reaction with current touch status\"))\n\n(defprotocol DelayedValidation\n  (start-validation! [this])\n  (mark-ok! [this])\n  (mark-error! [this error]))\n\n(defprotocol DelayValidationContainer\n  (validation-in-progress? [this]))"]}