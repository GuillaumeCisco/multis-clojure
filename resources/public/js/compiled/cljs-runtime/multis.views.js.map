{"version":3,"sources":["multis/views.cljs"],"mappings":"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","names":["multis.views/calcEndowment","callGas","callValue","gasPrice","fee","bounty","bignumber.core/number","multis.views/sleep","f","ms","js/setTimeout","multis.views/txReceiptAsync","web3","txHash","resolve","reject","err","receipt","js/console","multis.views/waitForTransactionToBeMined","promesa.core.create.cljs$core$IFn$_invoke$arity$1","multis.views/sendDelayedTransaction","amount","h","toAddress","cljs.core/deref","multis.views/sender","G__45667","re-frame.core/subscribe","multis.views/web3","or__4185__auto__","js/window","js/goog.DEBUG","cljs-web3.core/web3","cljs_web3.core.create_web3.cljs$core$IFn$_invoke$arity$1","multis.views/tSchedulerAddress","multis.views/timestampScheduler","cljs_web3.eth.contract_at.cljs$core$IFn$_invoke$arity$variadic","multis.timestampSchedulerABI/TimestampSchedulerABI","multis.views/callValue","multis.views/windowSize","multis.views/windowStart","js/Date","multis.views/callGas","multis.views/gasPrice","multis.views/fee","multis.views/bounty","multis.views/requiredDeposit","multis.views/endowment","G__45668","re-frame.core/dispatch","promesa.core.then.cljs$core$IFn$_invoke$arity$2","result","G__45669","G__45670","promesa.core.catch$.cljs$core$IFn$_invoke$arity$2","error","G__45671","G__45672","js/ethereum","js/ethereum.enable","v","G__45673","G__45674","G__45675","multis.views/handleForm","values","G__45676","multis.views/main-panel","name","G__45677","ethereum-error","G__45678","submitted","G__45679","G__45680","form","re_frame_forms.core.make_form.cljs$core$IFn$_invoke$arity$1","re_frame_forms.core.make_field.cljs$core$IFn$_invoke$arity$3","re_frame_forms.coerce.number.cljs$core$IFn$_invoke$arity$0","hours","re_frame_forms.coerce.int$.cljs$core$IFn$_invoke$arity$0","address","re_frame_forms.core.make_field.cljs$core$IFn$_invoke$arity$2","multis.styles/main","multis.styles/error","re-frame-forms.core/handle-valid-form","multis.styles/label","re-frame-forms.input/input","re-frame-forms.core/valid?","multis.styles/input-number","cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic","multis.styles/input-error","multis.styles/input","cljs.core/not","multis.styles/submit","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2","multis.styles/congrats","multis.styles/loading"],"sourcesContent":["(ns multis.views\n  (:use-macros [cljs.core.async.macros :only [go]])\n  (:require\n   [re-frame.core :as re-frame]\n   [cljs.core.async :refer [<! timeout]]\n   [multis.subs :as subs]\n   [multis.events :as evts]\n   [multis.styles :as styles]\n   [cljsjs.web3]\n   [cljs-web3.core :as web3]\n   [cljs-web3.eth :as web3-eth]\n   [bignumber.core :as bn]\n   [promesa.core :as p]\n   [re-frame-forms.core :as form]\n   [re-frame-forms.input :as input]\n   [re-frame-forms.coerce :as coerce]\n   [multis.timestampSchedulerABI :refer [TimestampSchedulerABI]]\n   ))\n\n;####################################################\n; Following code mimic eac-lib.js timestampScheduler utils method\n; borrowed from https://github.com/ethereum-alarm-clock/eac.js-lib/blob/master/lib/util.js#L23\n(defn calcEndowment\n  \"calc Endowment\" ;docstring\n  [callGas, callValue, gasPrice, fee, bounty] ;arguments\n  (+ (bn/number bounty) (bn/number fee) (* (bn/number callGas) gasPrice) (* (bn/number gasPrice) 180000) (bn/number callValue))\n)\n\n(defn sleep [f ms]\n  (js/setTimeout f ms))\n\n(defn txReceiptAsync\n \"txReceiptAsync\"\n [web3 txHash resolve reject]\n (.eth.getTransactionReceipt web3 txHash (fn [err, receipt]\n       (.log js/console \"receipt:\" receipt)\n       (if err\n          (reject err)\n          (if (nil? receipt)\n             (sleep #(txReceiptAsync web3 txHash resolve reject) 500)\n             (resolve receipt)\n          )\n       )\n ))\n)\n\n(defn waitForTransactionToBeMined\n  \"waitForTransactionToBeMined\" ;docstring\n  [web3 txHash] ;arguments\n  (p/create\n    (fn [resolve reject]\n      (txReceiptAsync web3 txHash resolve reject)\n    )\n  )\n)\n\n; #################\n; business code\n(defn sendDelayedTransaction\n  \"sendDelayedTransaction\" ;docstring\n  [amount h toAddress] ;arguments\n\n  ; get sender\n  (def sender @(re-frame/subscribe [:sender]))\n\n  ; get web3\n  (def web3 (or (aget js/window \"web3\")\n           (if goog.DEBUG\n             (web3/web3)\n             (web3/create-web3 \"https://morden.infura.io/metamask\"))))\n  ;(def w3 (new (aget js/window \"Web3\") (web3/current-provider web3)))\n  ;(def w3 (new (aget js/window \"Web3\") (aget js/window \"ethereum\")))\n  ;(def sender (web3-eth/default-account web3))\n\n  ; define timestamp scheduler\n  (def tSchedulerAddress \"0x44b28e47fe781eabf8095a2a21449a82a635745b\")\n  (def timestampScheduler (web3-eth/contract-at web3 TimestampSchedulerABI tSchedulerAddress))\n\n  ; borrowed form https://github.com/chronologic/integration-example/blob/integrated/src/app.js\n  (def callValue (.toWei web3 amount \"ether\"))\n  (def windowSize (* 15 60))\n  (def windowStart (+ (.getTime (js/Date.)) (* h 60 60 1000)))\n  ;(def windowStart (+ (.getTime (js/Date.)) (* h 5 1000))) ; use 5 sec for debugging\n  (def callGas \"21000\")\n  (def gasPrice (.toWei web3 \"10\" \"gwei\"))\n  (def fee (.toWei web3 \"0\" \"finney\"))\n  (def bounty (.toWei web3 \"0.01\" \"ether\"))\n  (def requiredDeposit (.toWei web3 \"0\" \"finney\"))\n\n\n  ; calcluate endowment\n  (def endowment (calcEndowment callGas callValue gasPrice fee bounty))\n\n  ; borrowed from https://github.com/ethereum-alarm-clock/eac.js-lib/blob/master/lib/scheduling/index.js\n  ; send delayed request\n  (.schedule timestampScheduler\n             toAddress\n             \"\"\n             #js [callGas callValue windowSize windowStart gasPrice fee bounty requiredDeposit]\n             #js {:from sender :gas 30000 :gasPrice nil :value endowment}\n             (fn [err txHash]\n               (if err\n                  (re-frame/dispatch [:submitted false])\n                  (-> (waitForTransactionToBeMined web3 txHash)\n                    (p/then (fn [result]\n                       (re-frame/dispatch [:transaction-validated result])\n                       (re-frame/dispatch [:submitted false])\n                    ))\n                    (p/catch (fn [error]\n                       (re-frame/dispatch [:transaction-failed error])\n                       (re-frame/dispatch [:submitted false])\n                    ))\n                  )\n               )\n             )\n  )\n)\n\n; #############\n; init\n(if (exists? js/ethereum)\n  (-> (js/ethereum.enable)\n      (p/then (fn [v]\n                (re-frame/dispatch [:ethereum-init v])\n                ))\n      (p/catch (fn [v]\n                (re-frame/dispatch [:ethereum-error v])\n                ))\n  )\n  (re-frame/dispatch [:ethereum-error \"Please install metamask extension\"])\n)\n\n\n; ###########\n; UI\n(defn handleForm\n \"Handle form\"\n [values]\n (re-frame/dispatch [:submitted true])\n (sendDelayedTransaction (:amount values) (:hours values) (:address values)))\n\n(defn main-panel []\n  (let [name (re-frame/subscribe [::subs/name])\n       ethereum-error (re-frame/subscribe [:ethereum-error])\n       submitted (re-frame/subscribe [:submitted])\n       receipt (re-frame/subscribe [:receipt])\n       form  (form/make-form {:amount 0.01 :hours 1 :address \"0xd8c6F58BbF71E0739E4CCfe9f9721a07285bB895\"})\n       amount (form/make-field form [:amount] (coerce/number))\n       hours (form/make-field form [:hours] (coerce/int))\n       address (form/make-field form [:address])]\n  [:div\n     {:style styles/main}\n     [:h1 \"Multis Delayed Transaction\"]\n     [:h3 \"Choose the amount and the delayed time (in hours) to send your transaction to a specified address\"]\n     (if-not (nil? @ethereum-error)\n       [:span {:style styles/error} @ethereum-error]\n       [:div\n         [:form {:on-submit (form/handle-valid-form form handleForm)}\n           [:label\n           {:style styles/label}\n            \"Amount:\"\n            [input/input amount {:type \"number\"\n                                 :step \"0.001\"\n                                 :style (if @(form/valid? amount)\n                                         styles/input-number\n                                         (merge styles/input-number styles/input-error))}]]\n           [:label\n            {:style styles/label}\n            \"Delayed by (in hours):\"\n            [input/input hours {:type \"number\"\n                                :style (if @(form/valid? hours)\n                                         styles/input-number\n                                         (merge styles/input-number styles/input-error))}]]\n           [:label\n           {:style styles/label}\n            \"to Address:\"\n            [input/input address {:type  \"text\"\n                                  :style (if @(form/valid? address)\n                                            styles/input\n                                            (merge styles/input styles/input-error))}]]\n            (if-not @submitted [:button {:type \"submit\" :style styles/submit :disabled @submitted} \"Submit\"])\n          ]\n         (if (= @submitted true)\n            (if-not (nil? @receipt)\n               [:span {:style styles/congrats} \"Congratulations transaction has been commited\"]\n               [:span {:style styles/loading} \"loading... Please wait until transaction has been commited\"])\n         )\n       ]\n     )\n  ]\n))\n"]}