{"version":3,"sources":["re_frame_forms/validation.cljs"],"mappings":"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","names":["x__4487__auto__","m__4488__auto__","re-frame-forms.validation/validate-field","goog/typeOf","m__4485__auto__","cljs.core/missing-protocol","re-frame-forms.validation/FieldValidator","this","value","re-frame-forms.validation/validate-form","re-frame-forms.validation/FormValidator","re-frame-forms.validation/field-errors","re-frame-forms.validation/valid?","re-frame-forms.validation/ValidationResult","path","cljs.core/PROTOCOL_SENTINEL","this__4428__auto__","writer__4429__auto__","opt__4430__auto__","cljs.core/-write","re-frame-forms.validation/ValidResult","re-frame-forms.validation/->ValidResult","re-frame-forms.validation/MapValidationResult","re-frame-forms.validation/->MapValidationResult","errors","_","cljs.core.remove.cljs$core$IFn$_invoke$arity$2","cljs.core/nil?","cljs.core.get_in.cljs$core$IFn$_invoke$arity$2","cljs.core/empty?","re-frame-forms.validation/validation-result","result","re-frame-forms.validation/form-validator","f","js/re-frame-forms","js/re-frame-forms.validation","js/re-frame-forms.validation.t_re_frame_forms$validation41160","re-frame-forms.validation/t_re_frame_forms$validation41160","_41162","meta41161","re-frame-forms.validation/->t_re_frame_forms$validation41160","goog.object/set","G__41198","G__41199","G__41200","G__41209","G__41210","G__41211","G__41212","G__41213","G__41214","G__41217","G__41218","G__41219"],"sourcesContent":["(ns re-frame-forms.validation)\n\n(defprotocol FieldValidator\n  \"Validate field\"\n  (validate-field\n    [this value]\n    \"Return vector of errors for the field. Empty vector if valie\"))\n\n(defprotocol FormValidator\n  \"Validate form\"\n  (validate-form\n    [this value]\n    \"Return instance of ValidationResult.\"))\n\n(defprotocol ValidationResult\n  \"Holder for validation result\"\n  (field-errors\n    [this path]\n    \"Get errors for the field on path\")\n  (valid?\n    [this]\n    \"Is this form valid?\"))\n\n(deftype ValidResult []\n  ValidationResult\n  (field-errors [this path]\n    [])\n  (valid? [this] true))\n\n(deftype MapValidationResult [errors]\n  ValidationResult\n  (field-errors [_ path]\n    (remove nil? [(get-in errors path)]))\n  (valid? [_]\n    (empty? errors)))\n\n(defn validation-result [result]\n  (->MapValidationResult result))\n\n(defn form-validator [f]\n  (reify\n    FormValidator\n    (validate-form [_ value]\n      (f value))))\n\n(extend-type nil\n  ValidationResult\n  (field-errors [this path]\n    [])\n  (valid? [this] true)\n\n  FieldValidator\n  (validate-field [this value]\n    [])\n\n  FormValidator\n  (validate-form [this value]\n    (->ValidResult)))"]}