{"version":3,"sources":["re_frame_forms/coerce.cljs"],"mappings":"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","names":["x__4487__auto__","m__4488__auto__","re-frame-forms.coerce/to-str","goog/typeOf","m__4485__auto__","cljs.core/missing-protocol","re-frame-forms.coerce/from-str","re-frame-forms.coerce/valid-str?","re-frame-forms.coerce/Coercer","this","obj-value","str-value","re-frame-forms.coerce/normalize-num-str","s","clojure.string/replace-all","cljs.core/PROTOCOL_SENTINEL","this__4428__auto__","writer__4429__auto__","opt__4430__auto__","cljs.core/-write","re-frame-forms.coerce/IntCoercer","re-frame-forms.coerce/->IntCoercer","allow-blank?","format","parse","_","obj","clojure.string/blank?","cljs.core/boolean","or__4185__auto__","and__4174__auto__","cljs.core/re-matches","var_args","G__41749","re-frame-forms.coerce/int","js/Error","re_frame_forms.coerce.int$.cljs$core$IFn$_invoke$arity$1","p1__41747#","re_frame_forms.format.format.cljs$core$IFn$_invoke$arity$1","js/parseInt","re-frame-forms.coerce/NumberCoercer","re-frame-forms.coerce/->NumberCoercer","G__41752","re-frame-forms.coerce/number","re_frame_forms.coerce.number.cljs$core$IFn$_invoke$arity$1","p1__41750#","js/parseFloat","re-frame-forms.coerce/BoolCoercer","re-frame-forms.coerce/->BoolCoercer","blank-as-false?","re-frame-forms.coerce/bool","re-frame-forms.coerce/KeywordCoercer","re-frame-forms.coerce/->KeywordCoercer","cljs.core/name","cljs.core.keyword.cljs$core$IFn$_invoke$arity$1","re-frame-forms.coerce/keyword","re-frame-forms.coerce/DateCoercer","re-frame-forms.coerce/->DateCoercer","re-frame-forms.coerce/date","pattern","re_frame_forms.format.format_date.cljs$core$IFn$_invoke$arity$1","re_frame_forms.format.parse_date.cljs$core$IFn$_invoke$arity$1","goog.object/set","G__41753","G__41754","G__41755","G__41756","G__41757","G__41758","G__41759","G__41760","G__41761"],"sourcesContent":["(ns re-frame-forms.coerce\n  (:refer-clojure :exclude [keyword int])\n  (:require\n    [clojure.string :as str]\n    [re-frame-forms.format :as fmt]\n    ))\n\n(defprotocol Coercer\n  (to-str [this obj-value])\n  (from-str [this str-value])\n  (valid-str? [this str-value]))\n\n(defn- normalize-num-str [s]\n  (-> s\n      (str/replace-all #\",\" \".\")\n      (str/replace-all #\"\\s\" \"\")))\n\n(deftype IntCoercer [allow-blank? format parse]\n  Coercer\n  (to-str [_ obj] (if (nil? obj) \"\" (format obj)))\n  (from-str [_ s] (if (str/blank? s) nil (parse s)))\n  (valid-str? [_ s]\n    (boolean (or (and allow-blank? (str/blank? s))\n                 (re-matches #\"(\\+|\\-)?[\\s\\d]+\" s)))))\n(defn int\n  ([]\n   (int \"0\"))\n  ([format]\n   (->IntCoercer true (fmt/format format) #(-> % normalize-num-str js/parseInt))))\n\n\n(deftype NumberCoercer [allow-blank? format parse]\n  Coercer\n  (to-str [_ obj] (if (nil? obj) \"\" (format obj)))\n  (from-str [_ s] (if (str/blank? s) nil (parse s #_(str/replace-all s #\",\" \".\"))))\n  (valid-str? [_ s]\n    (boolean (or (and allow-blank? (str/blank? s))\n                 (re-matches #\"(\\+|\\-)?[\\s\\d]+(?:(\\.|,)[\\s\\d]+)?\" s)))))\n(defn number\n  ([]\n   (number \"0.####\"))\n  ([format]\n   (->NumberCoercer true (fmt/format format) #(-> % normalize-num-str js/parseFloat))))\n\n(deftype BoolCoercer [blank-as-false?]\n  Coercer\n  (to-str [_ obj] (str obj))\n  (from-str [_ s] (if (and blank-as-false? (str/blank? s))\n                    false\n                    (boolean s)))\n  (valid-str? [_ s] true))\n(defn bool []\n  (->BoolCoercer true))\n\n(deftype KeywordCoercer []\n  Coercer\n  (to-str [_ obj] (if (nil? obj) \"\" (name obj)))\n  (from-str [_ s] (if (str/blank? s) nil (cljs.core/keyword s)))\n  (valid-str? [_ s] (not (str/blank? s))))\n(defn keyword []\n  (->KeywordCoercer))\n\n(deftype DateCoercer [format parse]\n  Coercer\n  (to-str [_ obj] (if (nil? obj) \"\" (format obj)))\n  (from-str [_ s] (if (str/blank? s) nil (parse s)))\n  (valid-str? [_ s] (boolean (or (str/blank? s)\n                                 (not (nil? (parse s)))))))\n\n(defn date [pattern]\n  (->DateCoercer (fmt/format-date pattern) (fmt/parse-date pattern)))\n\n(extend-type nil\n  Coercer\n  (to-str [_ obj] (str obj))\n  (from-str [_ s] s)\n  (valid-str? [_ _] true))"]}